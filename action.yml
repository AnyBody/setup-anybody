name: 'Setup AnyBody'
description: 'Setup AnyBody on GitHub Windows hosted runners'
inputs:
  anybody-version:  # id of input
    description: 'The version of AnyBody to install'
    required: true
    default: '7.5.0'
  anybody-version-suffix:  # id of input
    description: 'The version suffix of AnyBody to install (e.g. beta)'
    required: false
    default: ''
  anybody-version-build:  # id of input
    description: 'The build number of the AnyBody to install'
    required: false
    default: ''
  python-environment: 
    description: 'An environment.yml file with the python environment used by AnyBody'
    required: false
    default: ''

runs:
  using: "Composite"
  steps:

    - name: Split version number
      shell: pwsh
      run: |
        $ver = "${{ inputs.anybody-version }}".split(".")
        Add-Content -Path $env:GITHUB_ENV -Value "ANYBODY_VERSION=$($ver[0]).$($ver[1])"
        Add-Content -Path $env:GITHUB_ENV -Value "ANYBODY_VERSION_PATCH=$($ver[2])"
        Add-Content -Path $env:GITHUB_ENV -Value "ANYBODY_VERSION_SUFFIX=${{ inputs.anybody-version-suffix }}"
        if ("${{ inputs.anybody-version-suffix }}" -eq "")
        {
          Add-Content -Path $env:GITHUB_ENV -Value "ANYBODY_VERSION_UNDERSCORE_SUFFIX="
        }
        else
        {
          Add-Content -Path $env:GITHUB_ENV -Value "ANYBODY_VERSION_UNDERSCORE_SUFFIX=_${{ inputs.anybody-version-suffix }}"
        }
        Add-Content -Path $env:GITHUB_ENV -Value "ANYBODY_VERSION_BUILD=${{ inputs.anybody-version-build }}"

    - name: Set AnyBody Install dir
      shell: pwsh
      run: Add-Content -Path $env:GITHUB_ENV -Value "ANYBODY_INSTALL_DIR=$HOME/AnyBody Technology/AnyBody.$env:ANYBODY_VERSION$env:ANYBODY_VERSION_UNDERSCORE_SUFFIX"


    - name: Create AnyBody Folders
      shell: pwsh
      run: |
        mkdir "$env:ANYBODY_INSTALL_DIR"
        mkdir "$HOME\AnyBody Technology\Python"
        Add-MpPreference -ExclusionPath $env:ANYBODY_INSTALL_DIR
        Add-MpPreference -ExclusionPath $HOME/anybodysetup_micromamba


    - name: Cache AnyBody Install
      id: cache-anybody
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-anybody-${{ inputs.anybody-version }}-${{ inputs.anybody-version-suffix}} ${{ inputs.anybody-version-build}}
        path: |
          ~/AnyBody Technology/AnyBody.$env:ANYBODY_VERSION$env:ANYBODY_VERSION_UNDERSCORE_SUFFIX
    
    - name: Download and extract AnyBody
      if: ${{ steps.cache-anybody.outputs.cache-hit != 'true' }}}
      shell: pwsh
      run: |
        $url = "https://anybodycloudci.blob.core.windows.net/windows-anybodycon/anybody-minimal-$env:ANYBODY_VERSION.$env:ANYBODY_VERSION_PATCH$env:ANYBODY_VERSION_UNDERSCORE_SUFFIX$env:ANYBODY_VERSION_BUILD.zip"
        Invoke-WebRequest -Uri $url -OutFile "$HOME/AnyBody.zip"
        Add-Type -Assembly System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::ExtractToDirectory("$HOME/AnyBody.zip", $env:ANYBODY_INSTALL_DIR)   


    - name: Cache Python Install
      id: cache-anybody-python
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-anybody-${{ inputs.python-environment }}-${{ hashFiles(inputs.python-environment) }}
        path: |
          ~/AnyBody Technology/Python
    
    - name: Download and extract micro mamba
      if: ${{ steps.cache-anybody-python.outputs.cache-hit != 'true' }}}
      shell: pwsh
      run: | 
        Invoke-Webrequest -URI https://anaconda.org/conda-forge/micromamba/1.5.1/download/win-64/micromamba-1.5.1-0.tar.bz2 -OutFile ~\anybodysetup_micromamba.tar.bz2
        if ((Get-FileHash ~\anybodysetup_micromamba.tar.bz2).hash -ne "E39DB76A4CB4970799BE345C4C2BA5B485A2C3F3278CAD9BFC529DDB3463A4C2") {exit 1}
        $env:Path = "C:\PROGRA~1\Git\usr\bin;" + $env:Path
        tar -xvjf ~/anybodysetup_micromamba.tar.bz2 --strip-components 2 -C ~ Library/bin/micromamba.exe
        rename-item -Path ~\micromamba.exe -NewName anybodysetup_micromamba.exe
        Write-Host "##vso[task.setvariable variable=MAMBA_ROOT_PREFIX;]$HOME\anybodysetup_micromamba"

    - name: Install AnyBody Python installation
      if: ${{ steps.cache-anybody-python.outputs.cache-hit != 'true' }}}
      shell: pwsh
      run: | 
        ~\anybodysetup_micromamba.exe shell hook -s powershell | Out-String | iex

        if ($${{ inputs.python-environment == 'none' }}) {exit 0}
        if ($${{ inputs.python-environment == '' }}) {exit 0}
        
        if ($${{ inputs.python-environment == 'full' }}) 
        {
          ~\anybodysetup_micromamba.exe create -p "$HOME\AnyBody Technology\Python" -f $env:ANYBODY_INSTALL_DIR/Assist/conda-lock.yml --quiet
        }
        elseif ($${{ inputs.python-environment == 'minimal' }})
        {
          ~\anybodysetup_micromamba.exe create -p "$HOME\AnyBody Technology\Python" python=3.11 --quiet
        }
        else
        {
          if (!(Test-Path ${{ inputs.python-environment }})) {Write-Warning "The python-environment file `"${{ inputs.python-environment }}`" does not exist"; exit 1}
          ~\anybodysetup_micromamba.exe create -p "$HOME\AnyBody Technology\Python" -f ${{ inputs.python-environment }} --quiet
        }
        # Create _pth file so AnyBody includes the all the folders in the environment
        $pth_file = (get-item -Path "$env:ANYBODY_INSTALL_DIR\Python\python3??.dll").full.replace(".dll","._pth")
        @"
        .
        ./Lib/
        ./Lib/site-packages/
        ./Scripts/
        ./DLLs/
        ./Library/bin/
        "@ | Out-File -FilePath $pth_file -Encoding ascii
        
        # Set environment variable to override AnyBody's default python path
        Add-Content -Path $env:GITHUB_ENV -Value "ANYBODY_PATH_PYTHONHOME=$HOME\AnyBody Technology\Python"


    - name: Add AnyBody to registry
      shell: pwsh
      run:  |        
        $registryPath = "Registry::HKEY_CLASSES_ROOT\AnyBody.AnyScript\shell\Open\command"
        New-Item -Path $registryPath -Force
        Set-ItemProperty -Path $registryPath -Name "(Default)" -Value "`"$($env:ANYBODY_INSTALL_DIR)\AnyBody.exe`" `"%1`""

        $registryPath = "HKLM:\SOFTWARE\AnyBody Technology\AnyBody.${{ inputs.anybody-version }} (64-bit) $env:ANYBODY_VERSION_SUFFIX".trim()
        New-Item -Path $registryPath -Force
        New-ItemProperty -Path $registryPath -Name "InstallDir" -Value "$env:ANYBODY_INSTALL_DIR"

    - name: Add AnyBodyCon to path
      shell: pwsh
      run: |
        Add-Content -Path $env:GITHUB_PATH -Value "$env:ANYBODY_INSTALL_DIR"
